  private void broadcastUpdate(final String action,
                                 final BluetoothGattCharacteristic characteristic) {
        final Intent intent = new Intent(action);
        
      //String text = new String(txValue, "UTF-8");
        try {
			Log.e(TAG, "text = " + (new String(characteristic.getValue(), "UTF-8")));
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
       
        int hrValue;
        int humValue;
        //hrValue = characteristic.getValue();
        //Log.e(TAG, "hrvalue" + hrValue); 
        
     //   hrValue = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT16, 1);
        /*if (isHeartRateInUINT16(characteristic.getValue()[0])) {
			hrValue = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT16, 1);
		} else {
			hrValue = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0);
			int batteryValue = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0);
		}*/
        
        // This is special handling for the Heart Rate Measurement profile.  Data parsing is
        // carried out as per profile specifications:
        // http://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml
        if (TEM_LEVEL_CHARACTERISTIC.equals(characteristic.getUuid())) {
            characteristic.getValue();
            hrValue = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0);
            humValue = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 1);
            Log.e(TAG, "TEM hrvalue = " + hrValue + "  humValue = " + humValue); 
            //Log.e(TAG, "characteristic = " + TEM_LEVEL_CHARACTERISTIC);
            intent.putExtra(EXTRA_TYPE, DATA_TYPE_TEMP_HUMIT);
            intent.putExtra(EXTRA_DATA_TEMP, hrValue);
            intent.putExtra(EXTRA_DATA_HUMIT, humValue);
           // Log.d(TAG, String.format("Received TX: %d",characteristic.getValue() ));
            
        } else if (SLEEP_LEVEL_CHARACTERISTIC.equals(characteristic.getUuid())) {
            Log.e(TAG, "characteristic = " + SLEEP_LEVEL_CHARACTERISTIC); 
            int hrValue1 = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0);
            int hrValue2 = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 1);
            int hrValue3 = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 2);
            int hrValue4 = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 3);
            int hrValue5 = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 4);
            int hrValue6 = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 5);
            int hrValue7 = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 6);
            
            Log.e(TAG, "SLEEP hrvalue = " + hrValue1 + " " + hrValue2 
                    + " " + hrValue3 + " "+ hrValue4 + " "+ hrValue5 
                    + " "+ hrValue6 + " "+ hrValue7); 
            intent.putExtra(EXTRA_TYPE, DATA_TYPE_SLEEP);
            intent.putExtra(EXTRA_DATA_SLEEP, hrValue1);   
        } else if (BLE_UUID_NUS_RX_CHARACTERISTIC.equals(characteristic.getUuid())) {
            //BaseMessageHandler.acquireBaseData(characteristic);
            hrValue = characteristic.getIntValue(BluetoothGattCharacteristic.FORMAT_UINT8, 0);
            intent.putExtra(EXTRA_TYPE, DATA_TYPE_PM25);
            intent.putExtra(EXTRA_DATA_PM25, hrValue);
            Log.e(TAG, "HR hrvalue = PM");
            //Log.e(TAG, "characteristic = " + HR_CHARACTERISTIC_UUID); 
        }
        sendBroadcast(intent);
    }